[build]
  command = "npm install && npm run build"
  publish = "dist"
  
[build.environment]
  # Use Node.js 18 LTS (compatible with all dependencies)
  NODE_VERSION = "18.20.2"
  NPM_VERSION = "10.2.4"
  PYTHON_VERSION = "3.9"
  
  # Environment variables
  NODE_ENV = "production"
  
  # Ensure legacy OpenSSL provider is available if needed
  NODE_OPTIONS = "--openssl-legacy-provider"
  
  # Build flags
  CI = "false"
  
  # Enable caching
  NETLIFY_CACHE_DIR = ".netlify/cache/"
  
  # Disable telemetry
  NEXT_TELEMETRY_DISABLED = "1"
  
[build.processing]
  skip_processing = true
  
  # Image processing
  [build.processing.images]
    compress = true

# Functions configuration
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["@netlify/plugin-lighthouse"]

# Redirects for SPA
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Caching headers for static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"

# Security headers for all responses
[headers.values]
  Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https:;"
  X-Content-Type-Options = "nosniff"
  X-Frame-Options = "DENY"
  X-XSS-Protection = "1; mode=block"
  Referrer-Policy = "strict-origin-when-cross-origin"
  Permissions-Policy = "camera=(), microphone=(), geolocation=()"
  
# Cache settings
[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Development settings
[dev]
  framework = "vite"
  command = "npm run dev"
  port = 3000
  targetPort = 3000
  publish = "dist"
  autoLaunch = true
